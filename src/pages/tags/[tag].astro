---
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import { getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";

export const getStaticPaths = (async () => {
  const allPosts = await getCollection("posts");
  const allTags = allPosts.map((posts) => posts.data.tags).flat() as string[];
  const allUniqueTags = [...new Set(allTags)];

  return allUniqueTags.map((tag) => {
    const allPostsForTag = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );

    return {
      params: { tag },
      props: { posts: allPostsForTag },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<Base
  title={`All posts for "${tag}"`}
  description=`All posts of Micah Asowata's posts with tag: "${tag}"`
  img={{
    src: "https://utfs.io/f/8ffd5ba1-3388-49e4-a6b5-a07d28398385-1zbfv.png",
    alt: "Logo for Micah Asowata's website",
  }}
  type="website"
>
  <ul>
    {
      posts.map((post) => (
        <li>
          <a href={`/posts/${post.slug}`}>{post.data.title}</a>
        </li>
      ))
    }
  </ul>
</Base>
