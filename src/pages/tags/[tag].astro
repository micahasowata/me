---
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { formatDate } from "../../date/date";
import Pages from "../../layouts/Pages.astro";

export const getStaticPaths = (async () => {
  const allPosts = await getCollection("posts");
  const allTags = allPosts.map((posts) => posts.data.tags).flat() as string[];
  const allUniqueTags = [...new Set(allTags)];

  return allUniqueTags.map((tag) => {
    const allPostsForTag = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );

    return {
      params: { tag },
      props: { posts: allPostsForTag },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<Pages title={`All posts for "${tag}"`}>
  <ul>
    {
      posts.map((post) => (
        <li>
          <div>
            <a href={`/posts/${post.slug}`}>
              <Image
                src={post.data.cover.src}
                alt={post.data.cover.alt}
                width={100}
                height={100}
              />
              <div>
                <h2>{post.data.title}</h2>
                <p>{formatDate(post.data.pubDate)}</p>
                <p>{post.data.intro}</p>
              </div>
            </a>
          </div>
          <div>
            {post.data.tags.map((tag) => (
              <a href={`/tags/${tag}`}>{tag}</a>
            ))}
          </div>
        </li>
      ))
    }
  </ul>
</Pages>
